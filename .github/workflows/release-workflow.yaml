name: Release Workflow
on:
  release:
    types:
      - published
jobs:
  containerization:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # required for OIDC keyless signing
      contents: write
    env:
      IMAGE_NAME: llm-gw
    steps:
      - name: Checkout
        uses: actions/checkout@v4
            
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DH_USERNAME }}/${{ env.IMAGE_NAME }},enable=true
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.5.3'

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.docker_build.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}

      - name: Install Syft
        env:
          SYFT_VERSION: v1.28.0
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh \
          | sh -s -- -v -b /usr/local/bin -dd $SYFT_VERSION

      - name: Generate SBOM
        env:
          IMAGE: ${{ secrets.DH_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        run: |
          syft -o spdx-json $IMAGE >> sbom.spdx.json

      - name: Attest SBOM
        env:
          DIGEST: ${{ secrets.DH_USERNAME }}/${{ env.IMAGE_NAME }}@${{ steps.docker_build.outputs.digest }}
        run: |
          cosign attest --type=spdxjson --predicate ./sbom.spdx.json --yes ${DIGEST}

      - name: Upload SBOM with GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ./sbom.spdx.json
          
